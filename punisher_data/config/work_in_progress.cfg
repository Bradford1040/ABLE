# Work in progress for new pruge line
#[gcode_macro PRIME_EXTRUDER]
#  Get Printer built volume dimensions
{% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
{% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
{% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}
#  Get Nozzle diameter and filament width for conditioning
{% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
{% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}
#  Set Start coordinates of priming lines
{% set X_START = 10.0|default(10.0)|float %}
{% set Y_START = 20.0|default(20.0)|float %}
#  Calculate Primer line extrusion volume and filament length
{% set PRIMER_WIDTH = 0.75 * NOZZLE %} {% set PRIMER_HEIGHT = 0.70 * NOZZLE %}
{% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %
{% set PRIMER_VOL = PRIMER_SECT * (X_MAX - 3 * X_START) %}
{% set FILA_SECT = 3.1415 * ( FILADIA / 2.0)**2 %}
{% set FILA_LENGTH = 1.55 * PRIMER_VOL / FILA_SECT %}
#  Move up to clean bed
G1 Y{Y_MAX - 20} Z{Z_MAX/4.0} F6000
#  Heat nozzle and bed
M190 S{BED_TEMP}
M109 S{EXTRUDER_TEMP} T0
#  Precondition extruder
G92 E0
G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F6000.0
G1 X{X_MAX - 2 * X_START} Y{Y_START} Z{PRIMER_HEIGHT} F2000.0
G1 X{X_MAX - 2 * X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT}
G1 X{X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT} F2000.0
G92 E0
G1 Z2.0 F600
G1 Z0.2 F600
G1 Z2.0 F600

##################################################################################################################################################################
#Add to your slicerâ€™s Layer Change G-code section:                                                                                                               #
#CLEAN_NOZZLE LAYER={[layer_num] CLEAN_LAYERS=3 will clean the nozzle every third layer. Omitting the parameters forces the clean to be performed on each layer. #
##################################################################################################################################################################


#[gcode_macro CLEAN_NOZZLE]
description: Simple X-axis back and forth nozzle wipe performed wipe_count/2 times. Two PARAMETERS are both optional. The LAYER parameter provides the current layer info from your slicer's Layer Change G-code and CLEAN_LAYERS provides the iteration control for how frequently the nozzle procedure is actually performed. Defaults to 1, i.e., every layer. E.g. , CLEAN_NOZZLE LAYER={[layer_num] CLEAN_LAYERS=3 will clean the nozzle every third layer. Omitting the parameters forces the clean to be performed. While wipe_count could be changed to a parameter, once you determine how many wipes are sufficient it's simpler to set its value within the macro and fuhgetaboutit.
gcode:
    {% set layer = params.LAYER|default(0)|int %}; active layer number
    {% set clean_layers = params.CLEAN_LAYERS|default(1)|int %}; perform clean procedure every X layer
    {% if layer%clean_layers == 0 %} #the percent sign performs a modulo math operation, i.e., it calcs the remainder of a division operation
        SAVE_GCODE_STATE NAME=clean_nozzle_state
        {% set wipe_count = 6|int %} # each count is a wipe in one-direction
        {% set y_dir = 0|int %}
        {% if printer.toolhead.position.y > (printer.toolhead.axis_maximum.y - 10) %}: # check for potential nozzle movement interference with bed's edge retaining clips
            {% set y_dir = -1 %}
            {% elif printer.toolhead.position.y < (printer.toolhead.axis_minimum.y + 10) %}
                {% set y_dir = 1 %}
        {% endif %}
        G91
        G0 Z5 # avoid potential nozzle drag across existing print
        G90
        G0 Y{printer.toolhead.position.y|int + 10 * y_dir} # move nozzle away from edge clips
        {% for wipe in range(wipe_count) %} # simple X-axis back-and-forth wipe
            G0 X{235 + (20 * (loop.index is even))}
        {% endfor %}
        RESTORE_GCODE_STATE NAME=clean_nozzle_state MOVE=1
    {% endif %}

#[gcode_macro TIP_CLEAN]
#gcode:
  #PERCISE_HOME
    #G90
  #G92 E0 
  #G1 F2400 E-0.5 # Small retract to remove pressure
  #G92 E0
    #G1 X57 F1200
    #G1 Y382 F1000
    #G1 X97 F1200
    #G1 X57 F1200
    #G1 X97 F1200
    #G1 Y201 F1200
    #G1 X212.5 F1200

#[gcode_macro TIP_CLEAN]
gcode:
  SAVE_GCODE_STATE NAME=tip_clean_state
  {% set wipe_count = 4|int %} # each count is a wipe in one-direction
      G90
      G0 Y382 F1000
  {% for wipe in range(wipe_count) %} # simple X-axis back-and-forth wipe
      G0 X{57 + (40 * (loop.index is even))}
  {% endfor %}
  RESTORE_GCODE_STATE NAME=tip_clean_state MOVE=1
      G0 Y201 F1200
      G0 X212.5 F1200