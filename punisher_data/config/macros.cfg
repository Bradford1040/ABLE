[gcode_macro _CLIENT_VARIABLE]
gcode:
  variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
  variable_custom_park_x    : 390.0   ; custom x position; value must be within your defined min and max of X
  variable_custom_park_y    : 375.0   ; custom y position; value must be within your defined min and max of Y
  variable_custom_park_dz   : 10.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
  variable_retract          : 1.0   ; the value to retract while PAUSE
  variable_cancel_retract   : 6.0   ; the value to retract while CANCEL_PRINT
  variable_speed_retract    : 60.0  ; retract speed in mm/s
  variable_unretract        : 1.0   ; the value to unretract while RESUME
  variable_speed_unretract  : 45.0  ; unretract speed in mm/s
  variable_speed_hop        : 15.0  ; z move speed in mm/s
  variable_speed_move       : 100.0 ; move speed in mm/s
  variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
  variable_park_at_cancel_x : True  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
  variable_park_at_cancel_y : True  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
  ## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
  variable_use_fw_retract   : True ; use fw_retraction instead of the manual version [True/False]
  variable_idle_timeout     : 7200     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
  #variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
  ##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
  ## !!! Custom macros, please use with care and review the section of the corresponding macro.
  ## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
  ## Only  single line commands are supported, please create a macro if you need more than one command.
  #variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
  #variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
  #variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
#gcode:



[gcode_macro Calibrate_Home]
gcode:
  G4 P4000
  M190 S75
  M109 S190
  PERCISE_HOME
  G4 P1000
  PROBE_CALIBRATE

[gcode_macro MPC_Extruder]
gcode:
  MPC_CALIBRATE HEATER=extruder
  
[gcode_macro FAKE_POSITION]
gcode:
  SET_KINEMATIC_POSITION X=10 Y=10 Z=10


[gcode_macro BACK_UP_GITHUB]
gcode:
#  git pull  # --rebase
  RUN_SHELL_COMMAND CMD=update_git_script


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  #{% set X = params.X|default(390) %}    
  #{% set Y = params.Y|default(375) %}    
  #{% set Z = params.Z|default(30) %}    
  #{% set E = params.E|default(4) %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-4 F2100
  G1 Z10
  G90
  G1 X390 Y375 F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  #{% set E = params.E|default(2) %}
  G91
  G1 E2 F2100
  G90
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  #BASE_CANCEL_PRINT
  G91
  G1 E-4 F2100
  G1 Z10
  G90
  G1 X390 Y375 F6000

[gcode_macro PART_COOLING_FAN_ON]
gcode:
  M106 S255

[gcode_macro PART_COOLING_FAN_OFF]
gcode:
  M106 S0
    
# Percise Homing
[gcode_macro PERCISE_HOME]
gcode:
  FAKE_POSITION
  G4 P4000
  G1 Z20
  G4 P2000
  M117 Homing
  G90
  G28 Y   #-8
  G1 Y5 F1200
  G4 P2000
  G28 X   #-14
  G1 Y5 F1200
  G4 P2000
  G28 Z
  M117 Homed
  BED_MESH_PROFILE LOAD=default   
   

# Do nozzle priming
[gcode_macro PRIME_EXTRUDER]
gcode:
#    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(170) | float %}
    M117 Priming Line
    G92 E0
    G1 X2.1 Y10 Z0.5 F3000
    G1 X2.1 Y250 Z0.32 F1800.0 E45; Draw the first line
    G92 E0
    G1 X2.4 Y250 Z0.34 F5000.0; Move to the side a little
    G1 X2.4 Y15.0 Z0.34 F1600.0 E40; Draw the second line
    G92 E0 
    G1 F2400 E-2.5 # Small retract to remove pressure
    G1 Z4.0 F3000 ;Move Z Axis up
    SMART_PARK
    M117 Printing

[gcode_macro START_PRINT]
#default_parameter_BED_TEMP: 75
#default_parameter_EXTRUDER_TEMP: 150
gcode:
    _SET_MPC_MATERIAL MATERIAL={params.MATERIAL}
    {% set BED_TEMP = params.BED_TEMP|default(75) | float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(170) | float %}
    # Start bed heating
    M117 PRE-Heating bed
    M140 S{BED_TEMP}
    # Start nozzle heating
    M117 PRE-Heating nozzle
    M104 S180
    # Use absolute coordinates
    G90
    M73
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    PERCISE_HOME
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.45 F300
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    #Calibrate Bed Mesh
	BED_MESH_CALIBRATE
	M117 Temp Mesh
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    # Prime Extruder/line
    PRIME_EXTRUDER # Brad's Prime line
#    LINE_PURGE   ## KAMP Line Purge MACRO, purges near printed object instead of on edge of plate
#    G1 F2400 E1.0
#    G92 E0


[gcode_macro END_PRINT]
gcode: 
  G91 ; Relative positioning
  G1 E-6 Z10 F2700 ; Retract and lift Z
  G90 ; Absolute positioning
  G1 X390 Y375 F9000 ; end print X Y axis
  M104 S0 ; turn off temperature
  M140 S0 ; turn off heatbed
  M107 ; turn off fans
  M84  ; turn off steppers
  M221 S100  ; Reset flow to 100%
  M220 S100 ; Reset Feedrate to 100%
  M117 Print Complete


[gcode_macro m201]
description: Sets maximum accelleration.
  Usage: M201 [X<accel>] [Y<accel>]
variable_max_accel: 1.7976931348623157e+308
gcode:
  {% set km = printer["gcode_macro _km_globals"] %}
  {% if 'X' in params or 'Y' in params %}
    {% set accel = (params.X|default(params.Y)|float,
                    params.Y|default(params.X)|float)|min %}
    SET_GCODE_VARIABLE MACRO=m201 VARIABLE=max_accel VALUE="{accel}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro m203]
description: Sets maximum velocity.
  Usage: M203 [X<velocity>] [Y<velocity>]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set velocity = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT VELOCITY="{velocity}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro m205]
description: Sets square corner velocity.
  Usage: M203 [X<velocity>] [Y<velocity>]
gcode:
  {% if 'X' in params or 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY="{
      (params.X|default(0)|float, params.Y|default(0)|float)|min}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro m900]
description: Sets pressure advance.
  Usage: M900 [K<advance>] [T<extruder_index>]
gcode:
  {% set km = printer["gcode_macro _km_globals"] %}
  {% if km.pressure_advance_scale > 0.0 %}
    {% set extruder = "extruder" ~ params.T|replace('0', '')
       if "T" in params else printer.toolhead.extruder %}
    {% if 'K' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER="{extruder}" ADVANCE="{
        params.K|float * km.pressure_advance_scale}"
    {% endif %}
  {% endif %}


[gcode_macro _reset_velocity_limits]
description: Sets maximum accelleration.
  Usage: M204 [S<accel>] [P<accel> T<accel>]
gcode:
  SET_GCODE_VARIABLE MACRO=m201 VARIABLE=max_accel VALUE="{1.7976931348623157e+308}"

[gcode_macro m300]
description: Emits and audible beep.
  Usage: M300 [P<duration>] [S<frequency>]
gcode:
  {% set settings = printer.configfile.settings %}
  {% if "output_pin beeper" in printer %}
    {% set P = (params.P|default(100)|int, 0)|max %}
    {% set S = (params.S|default(1000)|int, 1)|max %}
    SET_PIN PIN=beeper VALUE={% if settings["output_pin beeper"].pwm %}{
        settings["output_pin beeper"].scale|default(1.0) * 0.5
      } CYCLE_TIME={ 1.0 / S }{% else %}1{% endif %}
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0
  {% else %}
    {action_respond_info(
       "M300 is disabled. To enable create an [output_pin beeper] config.")}
  {% endif %}



[gcode_macro _SET_MPC_MATERIAL]
description: Set heater MPC parameters for a given material
variable_filament_table:
    ## Update this table to adjust material settings
    {
        ## ( density, heat capacity )  # suggested heat capacity range
        "PLA"       : ( 1.25, 1.93 ),  # 1.80 - 2.20
        "PETG"      : ( 1.27, 1.87 ),  # 1.70 - 2.20
        "PC+ABS"    : ( 1.15, 2.20 ),  # 1.50 - 2.20
        "ABS"       : ( 1.06, 2.40 ),  # 1.25 - 2.40
        "ASA"       : ( 1.10, 2.10 ),  # 1.30 - 2.10
        "PA6"       : ( 1.12, 2.50 ),  # 2.00 - 2.50
        "PA"        : ( 1.15, 2.50 ),  # 2.00 - 2.50
        "PC"        : ( 1.20, 1.90 ),  # 1.10 - 1.90
        "TPU"       : ( 1.21, 1.70 ),  # 1.50 - 2.00
        "TPU-90A"   : ( 1.15, 2.00 ),  # 1.50 - 2.00
        "TPU-95A"   : ( 1.22, 2.00 ),  # 1.50 - 2.00
        "ABS-CF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ASA-CF"    : ( 1.11, 2.10 ),  # 1.30 - 2.10
        "PA6-CF"    : ( 1.19, 2.50 ),  # 2.00 - 2.50
        "PC+ABS-CF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC+CF"     : ( 1.36, 1.90 ),  # 1.10 - 1.90
        "PLA-CF"    : ( 1.29, 2.20 ),  # 1.80 - 2.20
        "PETG-CF"   : ( 1.30, 2.20 ),  # 1.70 - 2.20
    }
gcode:
    {% set material = params.MATERIAL | upper %}
    {% set heater = params.HEATER | default('extruder') %}
    {% set extruder_config = printer.configfile.settings[heater] %}

    {% if material in filament_table %}
        {% set (density, heat_capacity) = filament_table[material] %}

        RESPOND PREFIX=🔥 MSG="Configured {heater} MPC for {material}. Density: {density}, Heat Capacity: {heat_capacity}"
    {% else %}
        {% set density = extruder_config.filament_density %}
        {% set heat_capacity=extruder_config.filament_heat_capacity %}

        RESPOND PREFIX=🔥 MSG="Unknown material '{material}', using default mpc parameters for {heater}"
    {% endif %}

    MPC_SET HEATER={heater} FILAMENT_DENSITY={density} FILAMENT_HEAT_CAPACITY={heat_capacity}


[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

  